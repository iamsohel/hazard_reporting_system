name: Run Django Tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the code
      uses: actions/checkout@v3

    - name: Set up Docker
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Create .env file
      working-directory: ./backend  # Specify the directory where your backend code is located
      run: |
        cat <<EOF > .env
        POSTGRES_ENGINE=django.contrib.gis.db.backends.postgis
        POSTGRES_DB=db_name
        POSTGRES_USER=db_user
        POSTGRES_PASSWORD=db_password
        POSTGRES_HOST=postgres
        POSTGRES_PORT=5432
        DJANGO_SECRET_KEY=your_secret_key
        DEBUG=True
        ALLOWED_HOSTS=*
        THROTTLE_RATE=1000/hour
        CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
        EOF

    - name: Set up Docker Compose
      working-directory: ./backend  # Specify the directory containing docker-compose.yml
      run: |
        docker-compose up -d postgres redis rabbitmq  # Start necessary services

    - name: Run Django Tests
      working-directory: ./backend  # Specify the directory containing manage.py
      run: |
        docker-compose run be poetry run python manage.py test  # Run the Django tests

    - name: Clean up
      working-directory: ./backend  # Specify the directory containing docker-compose.yml
      run: |
        docker-compose down  # Stop and remove containers, networks, volumes
